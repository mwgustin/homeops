---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin-deployment
spec:
  selector:
    matchLabels:
      app: httpbin
  replicas: 2
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      volumes:
      - name: test-app-volume
        persistentVolumeClaim:
          claimName: test-app-pvc
      containers:
      - name: httpbin
        image: kennethreitz/httpbin:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-app-pvc
  namespace: default
  labels:
    app: test-app
    app.kubernetes.io/name: test-app
    app.kubernetes.io/instance: test-app
    app.kubernetes.io/version: "5.8"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: test-app
spec:
  storageClassName: synology-iscsi # Change this to your storageClassName
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany # Change this to your accessModes if needed
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app: httpbin
  ports:
    - protocol: TCP
      port: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-ingress
spec:
  ingressClassName: external
  rules:
    - host: home.gustend.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-ingress-2
spec:
  ingressClassName: external
  rules:
    - host: bintest.gustend.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-ingress-wild
spec:
  ingressClassName: external
  rules:
    - host: protectedtest.gustend.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-ingress-test
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: internal
  tls:
    - hosts:
      - test.internal.gustend.net
      secretName: test-internal-gustend-net-cert
  rules:
    - host: test.internal.gustend.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
